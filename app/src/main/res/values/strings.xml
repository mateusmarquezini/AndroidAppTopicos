<resources>
    <!-- Botões-->
    <string name="tela_cadastro_usuario">Cadastro</string>
    <string name="entrar">Entrar</string>
    <string name="cadastrar">Cadastrar</string>
    <string name="lbl_responder">Responder</string>

    <!-- Labels Action Bar-->
    <string name="app_name">Learn IT</string>
    <string name="boas_vindas">Bem vindo!</string>
    <string name="praticar">Praticar</string>
    <string name="estudar">Estudar</string>
    <string name="resultado_final">Resultado final</string>

    <!-- Texto boas vindas-->
    <string name="textoBoasVindas">O Learn IT é um aplicativo que irá fornecer um guia prático e dinâmico para aprender a programar, utilizando como linguagem de programação, o Groovy.
Para quem não sabe, o Groovy é uma linguagem criada para o Java totalmente Orientada a Objetos, semelhante a Ruby e Python, pode-se entender como uma mistura dos mesmos e o mais legal de tudo; ela é interpretada pela JVM assim como Scala e Kotlin!
Com todas essas características, entre várias outras, o Learn IT vai lhe apresentar de uma forma didática e interativa, sendo a maior expectativa, o aprendizado qualificado na escrita de códigos pelo aluno, utilizando Groovy
    </string>

    <!-- Questão 01-->
    <string name="label_questionario">Questionario</string>
    <string name="questao01">Em Groovy, qual caracter utilizar para paramêtros em uma closures? </string>
    <string name="alternativa01_01">-></string>
    <string name="alternativa01_02">=></string>
    <string name="alternativa01_03">==></string>
    <string name="alternativa01_04">(</string>

    <!-- Questão 02-->
    <string name="questao02">Em uma classe Groovy, é possível utilizar código Java?</string>
    <string name="alternativa02_01">Sim, é possível</string>
    <string name="alternativa02_02">Não, não é possível</string>
    <string name="alternativa02_03">Somente se a extensão for .java</string>
    <string name="alternativa02_04">Nenhuma das alternativas</string>

    <!-- Questão 03-->
    <string name="questao03">Em Groovy, qual operador utilizamos para declarar uma variável com inferência de tipo?</string>
    <string name="alternativa03_01">def</string>
    <string name="alternativa03_02">val</string>
    <string name="alternativa03_03">var</string>
    <string name="alternativa03_04">variable</string>

    <!-- Questão 04-->
    <string name="questao04">Em Groovy, o que são Closures?</string>
    <string name="alternativa04_01">Um bloco de código reutilizável delimitado por chaves</string>
    <string name="alternativa04_02">Um bloco de código não reutilizável delimitado por parenteses</string>
    <string name="alternativa04_03">Um bloco de código onde seu retorno sempre será null</string>
    <string name="alternativa04_04">Um bloco de código reutilizável iniciado com $</string>

    <!-- Questão 05-->
    <string name="questao05">Qual o nome do operador: ?.</string>
    <string name="alternativa05_01">Elvis Operator</string>
    <string name="alternativa05_02">Safe Navigation</string>
    <string name="alternativa05_03">Safe Verified</string>
    <string name="alternativa05_04">Check Operation</string>

    <!-- Resultado final (Textos)-->

    <!-- Positivo -->
    <string name="resultado_final_positivo_info01">Parabéns! Seu desempenho foi satisfatório! Você acertou: </string>
    <string name="resultado_final_positivo_info02">De 5 questões! :)</string>

    <!-- Negativo -->
    <string name="resultado_final_negativo_info01">Que pena! Seu resultado não foi satisfatório! Você acertou: </string>
    <string name="resultado_final_negativo_info02">De 5 questões! :(</string>
    <string name="title_activity_estudos">Estudar</string>
    <string name="large_text">
        "• Sobre o Groovy\n\n"
"Groovy é uma linguagem orientada a objetos que é baseada na plataforma Java.\n"
"Groovy 1.0 foi lançado em 2 de janeiro de 2007 com o Groovy 2.4 como o maior "
"lançamento atual. Groovy é distribuído através de Licença Apache v 2.0.\n\n"
"Neste tutorial, nós explicaríamos todos os fundamentos de Groovy e como podemos colocá-lo em prática.\n\n"
"• Tokens\n\n"
"Um token é uma palavra-chave e um identificador, uma constante, um literal de cadeia ou um símbolo.\n"
"Ex: println(“Hello World”)\n\n"
"• Comentários\n\n"
"Comentários são usados para documentar seu código. Os comentários no Groovy podem ser de linha única ou multilinha.\n"
"Única linha: //Teste de comentário \n"
"Multi linha: /* Testes de comentários */ \n\n"
"• Ponto e vírgula\n\n"
"Diferente do Java, não é necessário ter pontos e vírgulas para distinguir"
"as várias instruções definidas no Groovy, e como podemos ver, para definirmos uma variável com inferência de tipo, utilizamos a palavra reservada def.\n"
"Ex: def x=5\n\n"

"• Identificadores\n\n"

"Identificadores são usados para definir variáveis, funções ou outras variáveis definidas "
"pelo usuário. Identificadores iniciados com uma letra, um dólar ou um sublinhado. "
"Eles não podem começar com um número.\n"
"Ex: def employeename\n\n"
"• Palavras chaves\n\n"
"Palavras-chave como o nome sugerem são palavras especiais que são reservadas no Groovy Programming\n"
"Ex: If | Else | Case .... \n\n"

"• Tipos numéricos de classe\n\n"

"Diferente do Java, no Groovy tudo é objeto! A seguir, as classes Wrappers aceitas em Groovy:\n\n"

": java.lang.Byte\n"
": java.lang.Short\n"
": java.lang.Integer\n"
": java.lang.Long\n"
": java.lang.Float\n"
": java.lang.Double\n\n"ƒ
    </string>
    <string name="action_settings">Settings</string>


</resources>
